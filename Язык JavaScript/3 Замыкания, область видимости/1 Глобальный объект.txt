КРАТКО

В результате инициализации, к началу выполнения кода:
1 Функции, объявленные как Function Declaration, создаются полностью и готовы к использованию.
2 Переменные объявлены, но равны undefined. Присваивания выполнятся позже, когда выполнение дойдет до них.

/////////////////////////////////////////////////////////////////
ГЛОБАЛЬНЫЙ ОБЪЕКТ

В JavaScript все глобальные переменные и функции являются свойствами специального объекта, который называется «глобальный объект» (global object).

В браузере этот объект явно доступен под именем window.

Присваивая или читая глобальную переменную, мы, фактически, работаем со свойствами window.

var a = 5; // объявление var создаёт свойство window.a
alert( window.a ); // 5
window.b = 7;
alert( b ); // 7

////////////////////////////////////////////////////////////////////////
ПОРЯДОК ИНИЦИАЛИЗАЦИИ

ВЫПОЛНЕНИЕ СКРИПТА ПРОИСХОДИТ В ДВЕ ФАЗЫ:

1 ++ Инициализация и подготовка к запуску ++

Function declaration (function f() {})
var // undefined
ВСЕ ДОБАВЛЯЕТСЯ В window.

Функции, объявленные как Function Declaration, создаются сразу работающими, а переменные – равными undefined.

2 ++ Выполнение ++

Присваивание (=) значений переменных происходит, когда поток выполнения доходит до соответствующей строчки кода, до этого они undefined.

////////////////////////////////////////////////////////////////////////
ОСОБЕННОСТИ 

Конструкции for, if... не влияют на видимость переменных
Также нет разницы между объявлением в цикле и вне его:

Не важно, где и сколько раз объявлена переменная
Все var будут обработаны один раз, на фазе инициализации.
