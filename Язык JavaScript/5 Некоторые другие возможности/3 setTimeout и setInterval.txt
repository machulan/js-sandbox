setTimeout // однократно через интервал
setInterval // многократно с интервалом
//////////////////////////////////////////
var timerId = setTimeout(func / code, delay[, arg1, arg2...])

func/code
Функция или строка кода для исполнения. Строка поддерживается для совместимости, использовать её не рекомендуется.
delay
Задержка в миллисекундах, 1000 миллисекунд равны 1 секунде.
arg1, arg2…
Аргументы, которые нужно передать функции. 

Исполнение функции произойдёт спустя время, указанное в параметре delay.

//////////////////////////////////////////
ОТМЕНА setTimeout

var timerId = setTimeout(...);
clearTimeout(timerId); // ОТМЕНА ДЕЙСТВИЯ timerId
//////////////////////////////////////////
setInterval

Аналог setTimeout.
Регулярно повторяет её через указанный интервал времени. (многократно)
//////////////////////////////////////////
ОТМЕНА setInterval

var timerId = setInterval(...);
clearInterval(timerId); // ОТМЕНА ДЕЙСТВИЯ timerId
//////////////////////////////////////////
РЕКУРСИВНЫЙ setTimeout КАК АНАЛОГ setImterval

/** вместо:
var timerId = setInterval(function() {
  alert( "тик" );
}, 2000);
*/

var timerId = setTimeout(function tick() {
  alert( "тик" );
  timerId = setTimeout(tick, 2000);
}, 2000);

Рекурсивный setTimeout гарантирует паузу между вызовами, setInterval – нет.
