КОНСТРУКТОР

Конструктором становится любая функция, вызванная через new.

function Animal(name) {
  this.name = name;
  this.canWalk = true;
}

var animal = new Animal("ёжик");

new 
1 Создаётся новый пустой объект.
2 Ключевое слово this получает ссылку на этот объект.
3 Функция выполняется. Как правило, она модифицирует this (т.е. этот новый объект), добавляет методы, свойства.
4 Возвращается this.

animal = {
  name: "ёжик",
  canWalk: true
}

//////////////////////////////////////////////////////////////////
СИНГЛЕТОН

new function () {}

var animal = new function() {
  this.name = "Васька";
  this.canWalk = true;
};

//////////////////////////////////////////////////////////////////
ПРАВИЛА ОБРАБОТКИ return

Если в конструкторе есть явный вызов return, то:
1 При вызове return с объектом, будет возвращён он, а не this.
2 При вызове return с примитивным значением, оно будет отброшено. (возвратит this)

//////////////////////////////////////////////////////////////////
МОЖНО ОПУСТИТЬ СКОБКИ

var animal = new Animal // допустимо стандартом

//////////////////////////////////////////////////////////////////
СОЗДАНИЕ МЕТОДОВ В КОНСТРУКТОРЕ

function User(name) {
  this.name = name;

  this.sayHi = function() {
    alert( "Моё имя: " + this.name );
  };
}

//////////////////////////////////////////////////////////////////
ЛОКАЛЬНЫЕ ПЕРЕМЕННЫЕ

function User(firstName, lastName) {
  // вспомогательная переменная
  var phrase = "Привет";

  //  вспомогательная вложенная функция
  function getFullName() {
      return firstName + " " + lastName;
    }

  this.sayHi = function() {
    alert( phrase + ", " + getFullName() ); // использование
  };
}