Главной концепцией управления памятью в JavaScript является принцип достижимости (англ. reachability).

1 Определённое множество значений считается достижимым изначально:

1) Значения, ссылки на которые содержатся в стеке вызова.
2) Все глобальные переменные.

2 Любое другое значение сохраняется в памяти лишь до тех пор, пока доступно из корня по ссылке или цепочке ссылок.

////////////////////////////////////////////////////////////////////////
ДОСТИЖИМОСТЬ И НАЛИЧИЕ ССЫЛОК

1 Если ссылок на значение нет, то память из-под него очищается.

2 Наличие ссылки не гарантирует, что значение останется в памяти.

////////////////////////////////////////////////////////////////////////
АЛГОРИТМ СБОРКИ МУСОРА

Совершенно неважно, что из объекта выходят какие-то ссылки, они не влияют на достижимость этого объекта.

////////////////////////////////////////////////////////////////////////
ЗАМЫКАНИЯ

Объект LexicalEnvironment живёт ровно до тех пор, пока на него существуют ссылки.

////////////////////////////////////////////////////////////////////////
ОПТИМИЗАЦИЯ V8 И ЕЕ ПОСЛЕДСТВИЯ
Важный побочный эффект в V8 (Chrome, Opera) состоит в том, что удалённая переменная станет недоступна и при отладке!