КРАТКО 

1 Оператор obj instanceof Func проверяет тот факт, что obj является результатом вызова new Func. Он учитывает цепочку __proto__, поэтому наследование поддерживается.

2 Оператор instanceof не сможет проверить тип значения, если объект создан в одном окне/фрейме, а проверяется в другом. Это потому, что в каждом окне своя иерархия объектов. Для точной проверки типов встроенных объектов можно использовать свойство [[Class]].

///////////////////////////////////////////////////////////////////
АЛГОРИТМ РАБОТЫ instanceof

obj instanceof Constructor // true, если obj принадлежит классу Constructor или классу, наследующему от него.

ПРИМЕР:

function Rabbit() {}

// создаём объект
var rabbit = new Rabbit();

// проверяем -- этот объект создан Rabbit?
alert( rabbit instanceof Rabbit ); // true, верно

АЛГОРИТМ ПРОВЕРКИ obj instanceof Constructor:
1 Получить obj.__proto__
2 Сравнить obj.__proto__ с Constructor.prototype
3 Если не совпадает, тогда заменить obj на obj.__proto__ и повторить проверку на шаге 2 до тех пор, пока либо не найдется совпадение (результат true), либо цепочка прототипов не закончится (результат false).

///////////////////////////////////////////////////////////////////
instanceof, ФРЕЙМЫ И ОКНА - НЕ ДРУЗЬЯ

Оператор instanceof не срабатывает, когда значение приходит из другого окна или фрейма.
У каждого окна и фрейма - своя иерархия объектов и свой window.
